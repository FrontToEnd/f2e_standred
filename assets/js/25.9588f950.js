(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{841:function(e,r,o){"use strict";o.r(r);var t=o(77),_=Object(t.a)({},(function(){var e=this,r=e.$createElement,o=e._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"从0搭建脚手架"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#从0搭建脚手架"}},[e._v("#")]),e._v(" 从0搭建脚手架")]),e._v(" "),o("p",[e._v("本篇文章的诞生借鉴了"),o("a",{attrs:{href:"https://juejin.cn/post/6966119324478079007",target:"_blank",rel:"noopener noreferrer"}},[e._v("《从 0 构建自己的脚手架知识体系》"),o("OutboundLink")],1),e._v("，详细的教程可以点开链接进行学习，这里重点记录实操过程中遇到的问题。")]),e._v(" "),o("p",[e._v("提到脚手架，首先想到的就是诸如"),o("code",[e._v("vue-cli")]),e._v("和"),o("code",[e._v("create-react-app")]),e._v("等官方提供的脚手架。脚手架的作用就是提高开发的效率，通过交互式命令的方式快速的创建模板项目，防止我们成为CV工程师。")]),e._v(" "),o("blockquote",[o("p",[e._v("总得来说，脚手架的基本工作流程包括：")]),e._v(" "),o("ol",[o("li",[e._v("通过命令行交互询问用户问题")]),e._v(" "),o("li",[e._v("根据用户回答的结果生成文件")])])]),e._v(" "),o("p",[e._v("通过研究发现，"),o("code",[e._v("vue-cli")]),e._v("是根据一些列的询问动态生成模板文件以及"),o("code",[e._v("package.json")]),e._v("，这种方式更加的灵活，但是开发成本也很大，需要考虑到各种问题。这里采取另一种思路：远程拉取模板文件。核心思路是：通过交互式的询问选择需要的模板，根据tag来区分模板的版本；选择版本后将远程模板下载到当前目录。")]),e._v(" "),o("h2",{attrs:{id:"脚手架工具库"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#脚手架工具库"}},[e._v("#")]),e._v(" 脚手架工具库")]),e._v(" "),o("p",[e._v("开发之前先介绍下用到的工具库，具体的用法可以点击链接查看文档说明：")]),e._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"https://github.com/tj/commander.js/blob/master/Readme_zh-CN.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("commander"),o("OutboundLink")],1),e._v(" - 命令行自定义指令")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/SBoudrias/Inquirer.js/",target:"_blank",rel:"noopener noreferrer"}},[e._v("inquirer"),o("OutboundLink")],1),e._v(" - 命令行询问用户问题，记录回答结果")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/chalk/chalk",target:"_blank",rel:"noopener noreferrer"}},[e._v("chalk"),o("OutboundLink")],1),e._v(" - 控制台输出内容样式美化")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/sindresorhus/ora",target:"_blank",rel:"noopener noreferrer"}},[e._v("ora"),o("OutboundLink")],1),e._v(" - 控制台 loading 样式")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/patorjk/figlet.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("figlet"),o("OutboundLink")],1),e._v(" - 控制台打印 logo")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/eldargab/easy-table",target:"_blank",rel:"noopener noreferrer"}},[e._v("easy-table"),o("OutboundLink")],1),e._v(" - 控制台输出表格")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://gitlab.com/flippidippi/download-git-repo",target:"_blank",rel:"noopener noreferrer"}},[e._v("download-git-repo"),o("OutboundLink")],1),e._v(" - 下载远程模版")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/jprichardson/node-fs-extra",target:"_blank",rel:"noopener noreferrer"}},[e._v("fs-extra"),o("OutboundLink")],1),e._v(" - 系统fs模块的扩展")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/moxystudio/node-cross-spawn",target:"_blank",rel:"noopener noreferrer"}},[e._v("cross-spawn"),o("OutboundLink")],1),e._v(" - 支持跨平台调用系统上的命令")])]),e._v(" "),o("h2",{attrs:{id:"开发脚手架"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#开发脚手架"}},[e._v("#")]),e._v(" 开发脚手架")]),e._v(" "),o("p",[e._v("我们的开发步骤包括：")]),e._v(" "),o("ol",[o("li",[e._v("创建项目")]),e._v(" "),o("li",[e._v("创建脚手架启动命令（使用 commander）")]),e._v(" "),o("li",[e._v("询问用户问题获取创建所需信息（使用 inquirer）")]),e._v(" "),o("li",[e._v("下载远程模板（使用 download-git-repo）")]),e._v(" "),o("li",[e._v("发布项目")])]),e._v(" "),o("p",[e._v("具体的开发步骤可以点击开篇提到的文章进行学习，下面记录下遇到的问题。")]),e._v(" "),o("p",[e._v("使用"),o("code",[e._v("npm link")]),e._v("可以将在全局文件 "),o("code",[e._v("{prefix}/lib/node_modules/<package>")]),e._v(" 内，创建一个符号链接"),o("code",[e._v("（symlink）")]),e._v("，这个链接指向 "),o("code",[e._v("npm link")]),e._v(" 命令执行的地方。该命令方便我们在开发的过程中进行调试。英文文档的原文如下：")]),e._v(" "),o("blockquote",[o("p",[e._v("Next, in some other location, npm link package-name will create a symbolic link from globally-installed package-name to node_modules/ of the current folder.\nNote that package-name is taken from package.json, not from the directory name.")])]),e._v(" "),o("p",[e._v("具体到我们开发的脚手架，软链接取自"),o("code",[e._v("package.json")]),e._v("里的"),o("code",[e._v("bin")]),e._v("字段下面的关键字，将其放在全局文件中。需要注意的是，本地开发调试完毕后，需要执行"),o("code",[e._v("npm unlink")]),e._v("取消软链接，否则最终安装脚手架的包会报错，提醒全局文件中已存在对应的文件，需要手动删除。")]),e._v(" "),o("p",[e._v("我的电脑windows10下的全局命令是存放在"),o("code",[e._v("C:\\Program Files\\nodejs")]),e._v("目录下。也就是说，最终安装的目录是"),o("code",[e._v("C:\\Program Files\\nodejs\\node_modules\\zqy-cli")]),e._v("。而全局命令之所以可以执行也是因为在"),o("code",[e._v("C:\\Program Files\\nodejs")]),e._v("下生成了三个文件，对应不同的操作系统。使用全局命令创建模板时，node会根据操作系统找对应的文件，里面会告诉"),o("code",[e._v("node")]),e._v("最终执行的入口文件，比如说"),o("code",[e._v("$basedir/node_modules/zqy-cli/bin/cli.js")]),e._v("。而"),o("code",[e._v("cli.js")]),e._v("正是我们的入口文件。")]),e._v(" "),o("p",[e._v("开发完毕后，我们需要发布到"),o("code",[e._v("npm")]),e._v("上。发布"),o("code",[e._v("npm")]),e._v("包的命令是"),o("code",[e._v("npm publish")]),e._v("。发布之前需要确保本地已经登录。本地登录"),o("code",[e._v("npm")]),e._v("使用的命名是"),o("code",[e._v("npm login")]),e._v("。需要输入用户名、密码和邮件。如果没有npm的账号建议去官网进行注册。也可以通过命令"),o("code",[e._v("npm adduser")]),e._v("来创建，同样需要输入用户名、密码和邮件。这里需要注意的是，一定要将"),o("code",[e._v("npm")]),e._v("的源设置为官方源，否则登录会失败。切换源的命令为："),o("code",[e._v("npm config set registry https://registry.npmjs.org/")]),e._v("。")]),e._v(" "),o("p",[e._v("发布成功后，我们的脚手架就正式完成了。")]),e._v(" "),o("h2",{attrs:{id:"使用脚手架"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#使用脚手架"}},[e._v("#")]),e._v(" 使用脚手架")]),e._v(" "),o("p",[e._v("如果需要使用，我们可以全局安装："),o("code",[e._v("npm install -g zqy-cli")]),e._v("。安装完成后，可以使用全局命令"),o("code",[e._v("zqy")]),e._v("去创建模板项目："),o("code",[e._v("zqy create my-demo")]),e._v("。目前一共有"),o("code",[e._v("vue2.0")]),e._v("和"),o("code",[e._v("vue3.0")]),e._v("两个版本的模板，后续如果有更多的定制化需求，也会上线各个模板版本，保证团队高效的开发。")])])}),[],!1,null,null,null);r.default=_.exports}}]);