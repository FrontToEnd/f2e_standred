(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{844:function(t,a,v){"use strict";v.r(a);var _=v(77),e=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"性能优化指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能优化指标"}},[t._v("#")]),t._v(" 性能优化指标")]),t._v(" "),v("p",[t._v("日常工作中，我们常常会对现有的项目进行优化，但需要我们考虑的是，优化都有哪些切入点，优化的指标是什么，我们需要关注哪些值得优化的地方？")]),t._v(" "),v("p",[t._v("这里就来总结一下当对项目进行性能优化时，我们需要怎么做。")]),t._v(" "),v("h2",{attrs:{id:"常用的性能指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用的性能指标"}},[t._v("#")]),t._v(" 常用的性能指标")]),t._v(" "),v("p",[t._v("常用的性能指标包括以下几个，下面来详细介绍。以下的性能指标的详细介绍可以通过"),v("a",{attrs:{href:"https://web.dev/vitals/",target:"_blank",rel:"noopener noreferrer"}},[t._v("web.dev"),v("OutboundLink")],1),t._v("查看。")]),t._v(" "),v("ul",[v("li",[t._v("First Paint")]),t._v(" "),v("li",[t._v("First Contentful Paint")]),t._v(" "),v("li",[t._v("Largest Contentful Paint")]),t._v(" "),v("li",[t._v("First Meaningful Paint")]),t._v(" "),v("li",[t._v("First Input Delay")]),t._v(" "),v("li",[t._v("Cumulative Layout Shift")]),t._v(" "),v("li",[t._v("Time to Interactive")]),t._v(" "),v("li",[t._v("DOMContentLoaded")]),t._v(" "),v("li",[t._v("Load")])]),t._v(" "),v("h3",{attrs:{id:"first-paint-fp-首次绘制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#first-paint-fp-首次绘制"}},[t._v("#")]),t._v(" First Paint(FP) 首次绘制")]),t._v(" "),v("p",[t._v("首次渲染的时间点，可以视为白屏时间，比如完成背景色渲染的时间点。通常作为时间点最早的一个性能指标。")]),t._v(" "),v("h3",{attrs:{id:"first-contentful-paint-fcp-首次内容绘制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#first-contentful-paint-fcp-首次内容绘制"}},[t._v("#")]),t._v(" First Contentful Paint(FCP) 首次内容绘制")]),t._v(" "),v("p",[t._v('首次有内容渲染的时间点，指标测量页面从开始加载到页面内容的任何部分在屏幕上完成渲染的时间。对于该指标，"内容"指的是文本、图像、'),v("code",[t._v("<svg>")]),t._v("元素或非白色的"),v("code",[t._v("<canvas>")]),t._v("元素。可以作为首屏时间。")]),t._v(" "),v("p",[t._v("一般来说，FCP的耗时要比FP的大，因为渲染内容需要耗费时间。")]),t._v(" "),v("h3",{attrs:{id:"largest-contentful-paint-lcp-最大内容绘制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#largest-contentful-paint-lcp-最大内容绘制"}},[t._v("#")]),t._v(" Largest Contentful Paint (LCP) 最大内容绘制")]),t._v(" "),v("p",[t._v("最大内容绘制 (LCP) 指标会根据页面首次开始加载的时间点来报告可视区域内可见的最大图像或文本块完成渲染的相对时间。为了提供良好的用户体验，网站应该努力将最大内容绘制控制在"),v("strong",[t._v("2.5")]),t._v(" 秒或以内。")]),t._v(" "),v("p",[t._v("也就是说，LCP指标来说明页面上最核心的元素加载出来需要耗费的时间，这个时间最好不要超过"),v("strong",[t._v("2.5")]),t._v("秒。")]),t._v(" "),v("h3",{attrs:{id:"first-meaningful-paint-fmp-首次有效绘制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#first-meaningful-paint-fmp-首次有效绘制"}},[t._v("#")]),t._v(" First Meaningful Paint(FMP) 首次有效绘制")]),t._v(" "),v("p",[t._v("首次绘制有意义内容的时间。业界比较认可的方式是在加载和渲染过程中最大布局变动之后的那个绘制时间即为当前页面的 FMP。因为它计算相对复杂，且存在准确性等问题，Lighthouse 6.0 中被废弃。")]),t._v(" "),v("h3",{attrs:{id:"first-input-delay-fid-首次输入延迟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#first-input-delay-fid-首次输入延迟"}},[t._v("#")]),t._v(" First Input Delay(FID) 首次输入延迟")]),t._v(" "),v("p",[t._v("首次输入延迟，测量交互性。为了提供良好的用户体验，页面的 "),v("code",[t._v("FID")]),t._v(" 应为"),v("code",[t._v("100")]),t._v(" 毫秒或更短。")]),t._v(" "),v("p",[v("code",[t._v("FID")]),t._v(" 测量从用户第一次与页面交互（例如当他们单击链接、点按按钮或使用由 "),v("code",[t._v("JavaScript")]),t._v(" 驱动的自定义控件）直到浏览器对交互作出响应，并实际能够开始处理事件处理程序所经过的时间。")]),t._v(" "),v("p",[t._v("一般来说，发生输入延迟（又称输入延时）是因为浏览器的主线程正忙着执行其他工作，所以（还）不能响应用户。可能导致这种情况发生的一种常见原因是浏览器正忙于解析和执行由您的应用程序加载的大型 JavaScript 文件。在此过程中，浏览器不能运行任何事件侦听器，因为正在加载的 JavaScript 可能会让浏览器去执行其他工作。")]),t._v(" "),v("h3",{attrs:{id:"cumulative-layout-shift-cls-累积布局偏移"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cumulative-layout-shift-cls-累积布局偏移"}},[t._v("#")]),t._v(" Cumulative Layout Shift(CLS) 累积布局偏移")]),t._v(" "),v("p",[t._v("累积布局偏移，测量视觉稳定性。为了提供良好的用户体验，页面的 "),v("code",[t._v("CLS")]),t._v(" 应保持在 "),v("code",[t._v("0.1")]),t._v("或更少。")]),t._v(" "),v("p",[v("code",[t._v("CLS")]),t._v(" 测量整个页面生命周期内发生的所有意外布局偏移中最大一连串的布局偏移分数。")]),t._v(" "),v("p",[t._v("每当一个可见元素的位置从一个已渲染帧变更到下一个已渲染帧时，就发生了布局偏移。")]),t._v(" "),v("h3",{attrs:{id:"time-to-interactive-tti-可交互时间"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#time-to-interactive-tti-可交互时间"}},[t._v("#")]),t._v(" Time to Interactive(TTI) 可交互时间")]),t._v(" "),v("p",[t._v("TTI 指标测量页面从开始加载到主要子资源完成渲染，并能够快速、可靠地响应用户输入所需的时间。")]),t._v(" "),v("h3",{attrs:{id:"domcontentloaded-dcl"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#domcontentloaded-dcl"}},[t._v("#")]),t._v(" DOMContentLoaded(DCL)")]),t._v(" "),v("p",[t._v("DOM 加载完成即触发，不用等页面资源加载。")]),t._v(" "),v("h3",{attrs:{id:"load-l"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#load-l"}},[t._v("#")]),t._v(" Load(L)")]),t._v(" "),v("p",[t._v("页面及其依赖的资源全部加载完成的时间，包括所有的资源文件，如样式表和图片等。")]),t._v(" "),v("h2",{attrs:{id:"性能名词"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能名词"}},[t._v("#")]),t._v(" 性能名词")]),t._v(" "),v("h3",{attrs:{id:"lab-data-syn"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#lab-data-syn"}},[t._v("#")]),t._v(" Lab Data / SYN")]),t._v(" "),v("p",[v("code",[t._v("SYN")]),t._v(" 即 "),v("code",[t._v("synthetic monitoring")]),t._v("，收集形式也有叫 "),v("code",[t._v("in the lab")])]),t._v(" "),v("p",[v("code",[t._v("Lab Data")]),t._v(" 是在可控的条件下，特定的机型，特定的网络环境，收集的性能数据。一个使用场景是，新页面开发的时候，页面发布到生产环境中之前，是没办法基于真实用户做性能指标测量的，此时，想了解也没性能情况，可以通过 "),v("code",[t._v("Lab")]),t._v(" 方式收集和检查。")]),t._v(" "),v("h3",{attrs:{id:"field-data-rum"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#field-data-rum"}},[t._v("#")]),t._v(" Field Data / RUM")]),t._v(" "),v("p",[v("code",[t._v("RUM")]),t._v(" 即 "),v("code",[t._v("Real User Monitoring")]),t._v("，收集形式也有叫 "),v("code",[t._v("in the Filed")])]),t._v(" "),v("p",[v("code",[t._v("Lab")]),t._v(" 的方式测量虽然能反应性能情况，但是真实用户因机型和网络情况各异，页面加载对于不同用户具有很大的不确定性，"),v("code",[t._v("Lab")]),t._v(" 数据并不一定是真实用户的实际情况。而 "),v("code",[t._v("filed")]),t._v(" 数据很好的解决了这个问题，有一定的代码侵入性，记录真实用户的性能数据，通过 "),v("code",[t._v("RUM")]),t._v(" 数据可以发现一些 "),v("code",[t._v("Lab")]),t._v(" 数据下很难暴露出来的性能异常。")]),t._v(" "),v("h3",{attrs:{id:"rail-model"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rail-model"}},[t._v("#")]),t._v(" RAIL Model")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("R")]),t._v(": response")]),t._v(" "),v("li",[v("strong",[t._v("A")]),t._v(": animation")]),t._v(" "),v("li",[v("strong",[t._v("I")]),t._v(": idle")]),t._v(" "),v("li",[v("strong",[t._v("L")]),t._v(": load")])]),t._v(" "),v("p",[v("code",[t._v("RAIL")]),t._v(" 是 "),v("code",[t._v("Google")]),t._v(" 提出的以用户为中心的一套性能模型，从各个维度反应一个网站的性能情况，同时提供一组性能目标供参考")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("Response")]),t._v(": 50ms 内对事件做出响应")]),t._v(" "),v("li",[v("strong",[t._v("Animation")]),t._v(": 动画 10 ms 内生成内一帧（每帧耗时 16ms，用户会感到动画流畅）")]),t._v(" "),v("li",[v("strong",[t._v("Idle")]),t._v(": 最大化的利用空闲时间")]),t._v(" "),v("li",[v("strong",[t._v("Load")]),t._v(": 在 5s 内完成内容传输并达到用户可交互")])]),t._v(" "),v("h2",{attrs:{id:"性能指标采集方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能指标采集方法"}},[t._v("#")]),t._v(" 性能指标采集方法")]),t._v(" "),v("p",[t._v("具体的采集方法和优化策略可以查看"),v("a",{attrs:{href:"https://web.dev/learn-web-vitals/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web Vitals"),v("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);