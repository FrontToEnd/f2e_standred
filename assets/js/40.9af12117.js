(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{856:function(v,a,_){"use strict";_.r(a);var e=_(77),r=Object(e.a)({},(function(){var v=this,a=v.$createElement,_=v._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"云析上图流程汇总"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#云析上图流程汇总"}},[v._v("#")]),v._v(" 云析上图流程汇总")]),v._v(" "),_("h2",{attrs:{id:"流程总览"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#流程总览"}},[v._v("#")]),v._v(" 流程总览")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://img-node.oss-cn-shanghai.aliyuncs.com/images/Sequence.png",alt:"云析流程"}})]),v._v(" "),_("h3",{attrs:{id:"chart-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#chart-js"}},[v._v("#")]),v._v(" Chart.js")]),v._v(" "),_("p",[v._v("首先，云析模块的主页面位于"),_("code",[v._v("tieshangongzhu")]),v._v("仓库的"),_("code",[v._v("analyticGraph.vue")]),v._v("文件，当打开云析页面时，会调用"),_("code",[v._v("Chart.js")]),v._v("的"),_("code",[v._v("createTemporaryChart")]),v._v("静态方法用来新建一个临时图表，其中接收8个参数，具体含义如下：")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://img-node.oss-cn-shanghai.aliyuncs.com/images/Chart.png",alt:"Chart"}})]),v._v(" "),_("p",[v._v("在执行上述类的静态方法的同时，内部执行了"),_("code",[v._v("Chart")]),v._v("的构造函数以及"),_("code",[v._v("ChartMetadata")]),v._v("构造函数。"),_("code",[v._v("ChartMetadata")]),v._v("类是用来存储一些元信息，可通过"),_("code",[v._v("Chart")]),v._v("的实例对象调用"),_("code",[v._v("getChartMetadata()")]),v._v("方法来获取这些元信息。\n"),_("code",[v._v("Chart")]),v._v("类接收4个参数，具体含义如下：")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://img-node.oss-cn-shanghai.aliyuncs.com/images/newChart.png",alt:"newChart"}})]),v._v(" "),_("p",[v._v("在实例化"),_("code",[v._v("Chart")]),v._v("的时候，会创建空的各个图层，首先创建"),_("code",[v._v("OriginalGraph")]),v._v("，然后根据"),_("code",[v._v("ChartMetadata")]),v._v("里存储的是否进行叶子结点合并以及是否进行链接合并，来决定是否创建"),_("code",[v._v("EntityMergingGraph")]),v._v("和"),_("code",[v._v("LinkMergingGraph")]),v._v("。最后创建"),_("code",[v._v("FinalGraph")]),v._v("并将上述实例化对象传入。\n然后，"),_("code",[v._v("Chart")]),v._v("内部会实例化"),_("code",[v._v("CommandManager")]),v._v("，该类用来记录管理前进后退操作，默认最多记录5条。")]),v._v(" "),_("p",[v._v("此外，在"),_("code",[v._v("Chart")]),v._v("、"),_("code",[v._v("OriginalGraph")]),v._v("、"),_("code",[v._v("EntityMergingGraph")]),v._v("、"),_("code",[v._v("LinkMergingGraph")]),v._v("、"),_("code",[v._v("FinalGraph")]),v._v("以及"),_("code",[v._v("CommandManager")]),v._v("里都存在着"),_("code",[v._v("execute")]),v._v("方法，如果在当前类里找不到相应的方法，那么就会去传入的参数里面找，可以把"),_("code",[v._v("Chart")]),v._v("创建各个图层理解为入栈操作，最先入栈的是"),_("code",[v._v("OriginalGraph")]),v._v("，最后入栈的是"),_("code",[v._v("CommandManager")]),v._v("。把执行"),_("code",[v._v("execute")]),v._v("理解为出栈操作，因此最先执行到"),_("code",[v._v("CommandManager")]),v._v(",最后执行"),_("code",[v._v("OriginalGraph")]),v._v("。")]),v._v(" "),_("p",[v._v("下图演示了"),_("code",[v._v("Chart")]),v._v("初始化与调用"),_("code",[v._v("execute")]),v._v("时的操作：\n"),_("img",{attrs:{src:"https://img-node.oss-cn-shanghai.aliyuncs.com/images/execute.png",alt:"execute"}})]),v._v(" "),_("h3",{attrs:{id:"commandmanager-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#commandmanager-js"}},[v._v("#")]),v._v(" CommandManager.js")]),v._v(" "),_("p",[_("code",[v._v("CommandManager")]),v._v("类接收一个参数，"),_("code",[v._v("Chart")]),v._v("的上下文"),_("code",[v._v("this")]),v._v("，可以更方便的操作"),_("code",[v._v("Chart")]),v._v("。主要是用来记录前进与撤销操作，默认可以记录的操作有：")]),v._v(" "),_("ul",[_("li",[v._v("addSubGraph/removeSubGraph：添加与删除子图操作；")]),v._v(" "),_("li",[v._v("hideSubGraph/showAll：隐藏与展示子图操作；")]),v._v(" "),_("li",[v._v("setLayoutType：布局操作；")]),v._v(" "),_("li",[v._v("fullLinkMerge/linkUnmerge：链接合并与取消合并操作；")]),v._v(" "),_("li",[v._v("linkEliminate：链接消元操作；")]),v._v(" "),_("li",[v._v("setEntityBorder：设置实体边框操作；")]),v._v(" "),_("li",[v._v("setEntityScale：设置实体缩放操作；")]),v._v(" "),_("li",[v._v("setLinkColor：设置链接颜色操作；")]),v._v(" "),_("li",[v._v("setLinkWidth：设置链接宽度操作；")]),v._v(" "),_("li",[v._v("clearStyle：清空上述四种样式操作；")]),v._v(" "),_("li",[v._v("lock：设置实体锁定状态操作；")]),v._v(" "),_("li",[v._v("unLock：设置实体解锁状态操作；")])]),v._v(" "),_("h3",{attrs:{id:"graph-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#graph-js"}},[v._v("#")]),v._v(" Graph.js")]),v._v(" "),_("p",[v._v("该类继承自"),_("code",[v._v("EventEmitter")]),v._v(",可以实现事件监听。内部实现了对实体与链接的增删改查、显示隐藏、设置属性等等操作，同时存储了"),_("code",[v._v("elpData")]),v._v("。所有图层的事件都会经过该类进行触发，然后由该类里的方法修改最终生成的实体与链接。")]),v._v(" "),_("h3",{attrs:{id:"finalgraph-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#finalgraph-js"}},[v._v("#")]),v._v(" FinalGraph.js")]),v._v(" "),_("p",[_("code",[v._v("FinalGraph")]),v._v("类继承自基类"),_("code",[v._v("Graph")]),v._v("，并接收一个参数，该参数可以是"),_("code",[v._v("OriginalGraph")]),v._v("、"),_("code",[v._v("EntityMergingGraph")]),v._v("、"),_("code",[v._v("LinkMergingGraph")]),v._v("，传入什么参数取决于是否进行叶子结点合并以及是否进行链接合并。具体来说，如果"),_("code",[v._v("needLinkMerge")]),v._v("为"),_("code",[v._v("true")]),v._v("，则传入"),_("code",[v._v("LinkMergingGraph")]),v._v("的实例对象，如果"),_("code",[v._v("needEntityMerge")]),v._v("为"),_("code",[v._v("true")]),v._v("，则传入"),_("code",[v._v("EntityMergingGraph")]),v._v("的实例对象，都为"),_("code",[v._v("false")]),v._v("则传入"),_("code",[v._v("OriginalGraph")]),v._v("的实例对象。")]),v._v(" "),_("p",[v._v("在该类中，主要操作包括监听了由"),_("code",[v._v("Graph")]),v._v("emit出的"),_("code",[v._v("changed")]),v._v("事件，执行对实体与链接的增删改查、显示隐藏、设置属性等等操作。中转了"),_("code",[v._v("elp-changed")]),v._v("、"),_("code",[v._v("collection-add")]),v._v("、"),_("code",[v._v("collection-remove")]),v._v("等事件到"),_("code",[v._v("Chart")]),v._v("中。将大部分对图数据的操作包裹为"),_("code",[v._v("Promise")]),v._v("，方便进行异步调用。")]),v._v(" "),_("h3",{attrs:{id:"linkmerginggraph-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#linkmerginggraph-js"}},[v._v("#")]),v._v(" LinkMergingGraph.js")]),v._v(" "),_("p",[_("code",[v._v("LinkMergingGraph")]),v._v("类继承自基类"),_("code",[v._v("Graph")]),v._v("，并接收三个参数，具体参数含义如下：\n"),_("img",{attrs:{src:"https://img-node.oss-cn-shanghai.aliyuncs.com/images/LinkMergingGraph.png",alt:"LinkMergingGraph"}}),v._v("\n在该类中，主要操作包括链接合并规则的设置与读取、链接样式的设置、链接合并与取消合并，同样也监听了由"),_("code",[v._v("Graph")]),v._v("emit出的事件，对链接进行增删改查，但是最终都是调用基类"),_("code",[v._v("Graph")]),v._v("的方法，将数据存储在"),_("code",[v._v("Graph")]),v._v("里。")]),v._v(" "),_("h3",{attrs:{id:"entitymerginggraph-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#entitymerginggraph-js"}},[v._v("#")]),v._v(" EntityMergingGraph.js")]),v._v(" "),_("p",[_("code",[v._v("EntityMergingGraph")]),v._v("类继承自基类"),_("code",[v._v("Graph")]),v._v("，并接收两个参数，具体含义如下：\n"),_("img",{attrs:{src:"https://img-node.oss-cn-shanghai.aliyuncs.com/images/EntityMergingGraph.png",alt:"EntityMergingGraph"}}),v._v("\n该类的作用与"),_("code",[v._v("LinkMergingGraph")]),v._v("的作用类似。")]),v._v(" "),_("h3",{attrs:{id:"originalgraph-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#originalgraph-js"}},[v._v("#")]),v._v(" OriginalGraph.js")]),v._v(" "),_("p",[_("code",[v._v("OriginalGraph")]),v._v("类继承自基类"),_("code",[v._v("Graph")]),v._v("，并接收三个参数，具体含义如下：\n"),_("img",{attrs:{src:"https://img-node.oss-cn-shanghai.aliyuncs.com/images/OriginalGraph.png",alt:"OriginalGraph"}}),v._v("\n在该类中，会执行添加、删除、隐藏、展示子图的操作，以及设置实体与链接的样式。")]),v._v(" "),_("h2",{attrs:{id:"图层总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#图层总结"}},[v._v("#")]),v._v(" 图层总结")]),v._v(" "),_("p",[v._v("经过上面的概述可以发现，对实体链接的许多操作在很多图层里同时存在，那么真实调用的顺序是怎么样的？以全部显示"),_("code",[v._v("showAll")]),v._v("方法为例：\n首先分为两个阶段，分别是图层初始化阶段与方法调用阶段。\n"),_("img",{attrs:{src:"https://img-node.oss-cn-shanghai.aliyuncs.com/images/initRender.png",alt:"initRender"}})]),v._v(" "),_("p",[v._v("可以看到，在第二步与第三步的时候，都监听了"),_("code",[v._v("graph")]),v._v("实例对象的"),_("code",[v._v("changed")]),v._v("事件。而在"),_("code",[v._v("Graph.js")]),v._v("中，会监听"),_("code",[v._v("FinalGraph")]),v._v("实例上的"),_("code",[v._v("changed")]),v._v("方法，同时触发回调函数，在回调函数内会广播"),_("code",[v._v("graph")]),v._v("实例上的"),_("code",[v._v("changed")]),v._v("事件，所有监听了"),_("code",[v._v("graph")]),v._v("实例对象"),_("code",[v._v("changed")]),v._v("事件的地方都会响应。")]),v._v(" "),_("p",[v._v("在代码执行阶段，首先在"),_("code",[v._v("analyticGraph.vue")]),v._v("里会调用"),_("code",[v._v("this.chart.execute('showAll')")]),v._v(",然后会经由"),_("code",[v._v("CommandManager")]),v._v("、"),_("code",[v._v("FinalGraph")]),v._v("、"),_("code",[v._v("OriginalGraph")]),v._v("，在"),_("code",[v._v("OriginalGraph")]),v._v("里触发"),_("code",[v._v("showAll")]),v._v("，在"),_("code",[v._v("Graph.js")]),v._v("里去执行"),_("code",[v._v("showLink")]),v._v("方法。接下来广播"),_("code",[v._v("changed")]),v._v("事件，在"),_("code",[v._v("FinalGraph")]),v._v("里会捕获该事件并广播"),_("code",[v._v("changed")]),v._v("事件。由上图第五步可知，渲染层的"),_("code",[v._v("Graph.js")]),v._v("会去监听"),_("code",[v._v("FinalGraph")]),v._v("实例上"),_("code",[v._v("changed")]),v._v("事件，因此最终会触发第二、三步里的回调，执行"),_("code",[v._v("onGraphChanged")]),v._v("事件，进行"),_("code",[v._v("webGL")]),v._v("的渲染。")]),v._v(" "),_("h3",{attrs:{id:"两个graph的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#两个graph的区别"}},[v._v("#")]),v._v(" 两个Graph的区别")]),v._v(" "),_("p",[v._v("注意这里跟"),_("code",[v._v("Chart")]),v._v("打交道的"),_("code",[v._v("Graph")]),v._v("与渲染使用的"),_("code",[v._v("Graph")]),v._v("是两个不同的文件，与"),_("code",[v._v("Chart")]),v._v("相关的"),_("code",[v._v("Graph")]),v._v("主要是存储实体与链接并对其进行操作，与渲染相关的"),_("code",[v._v("Graph")]),v._v("主要是监听事件，并通知到各个图层去执行具体的方法。")]),v._v(" "),_("h2",{attrs:{id:"上图时间分析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#上图时间分析"}},[v._v("#")]),v._v(" 上图时间分析")]),v._v(" "),_("h3",{attrs:{id:"页面初始化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#页面初始化"}},[v._v("#")]),v._v(" 页面初始化")]),v._v(" "),_("p",[v._v("首先，云析页面初始化的时候，WebGL已初始化完毕，包括"),_("code",[v._v("NodeContainer")]),v._v("和"),_("code",[v._v("LinkContainer")]),v._v("已经把实体和链接所需的纹理与顶点缓存至"),_("code",[v._v("pixiRenderer")]),v._v("当中，使用的是"),_("code",[v._v("pixi")]),v._v("提供的"),_("code",[v._v("pixi-gl-core")]),v._v("库。初始化webGL的时间在100ms左右。")]),v._v(" "),_("h3",{attrs:{id:"上图中"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#上图中"}},[v._v("#")]),v._v(" 上图中")]),v._v(" "),_("p",[v._v("然后在上图的过程中，以1w实体，2w链接为例，整体的时间为4s。其中耗时较多的执行方法包括，")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("OriginalGraph")]),v._v("里的添加子图方法"),_("code",[v._v("addSubGraph")]),v._v("耗时160ms")]),v._v(" "),_("li",[_("code",[v._v("ForceLayoutInNGraph.js")]),v._v("里监听"),_("code",[v._v("graph")]),v._v("变化的回调函数"),_("code",[v._v("onGraphChanged")]),v._v("耗时146ms")]),v._v(" "),_("li",[_("code",[v._v("ForceLayoutInNGraph.js")]),v._v("里与默认布局有关的方法"),_("code",[v._v("step")]),v._v("耗时312ms")]),v._v(" "),_("li",[_("code",[v._v("pixiRenderer.js")]),v._v("里的"),_("code",[v._v("onGraphChanged")]),v._v("函数耗时2.2s")]),v._v(" "),_("li",[_("code",[v._v("pixi.js")]),v._v("里内置的渲染webGL的方法"),_("code",[v._v("WebGLRenderer.js")]),v._v("耗时848ms")]),v._v(" "),_("li",[v._v("云析UI页面"),_("code",[v._v("analyticGraph.vue")]),v._v("里监听graph变化的函数"),_("code",[v._v("graphChangeListener")]),v._v("耗时150ms")])]),v._v(" "),_("p",[v._v("优化方向：")]),v._v(" "),_("blockquote",[_("p",[v._v("1、优化默认布局相关代码，缩减2、3的耗时；\n2、"),_("code",[v._v("pixiRenderer.js")]),v._v("里的"),_("code",[v._v("onGraphChanged")]),v._v("占总耗时的一半以上，是因为针对上图的每个实体和链接都进行了初始化的操作，考虑将初始化的操作放入js原生提供的"),_("code",[v._v("web worker")]),v._v("内，采用额外的线程执行代码，防止阻塞主线程，该方案需要进一步研究；")])]),v._v(" "),_("h3",{attrs:{id:"上图后"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#上图后"}},[v._v("#")]),v._v(" 上图后")]),v._v(" "),_("p",[v._v("上完图后，当数据量较多的时候，针对实体的拖拽等操作会有明显的卡顿，经查看浏览器的火焰图发现，是因为"),_("code",[v._v("pixi.js")]),v._v("的核心库"),_("code",[v._v("InteractionManager")]),v._v("会不断的监听鼠标的事件，包括鼠标移动、单击落下、单击抬起的操作，当鼠标移动的时候，会不断的触发"),_("code",[v._v("onPointerMove")]),v._v("事件，该事件每次执行时间在70-100ms之间，阻塞了前端动画事件的执行，由此产生卡顿。")]),v._v(" "),_("p",[v._v("优化方向：")]),v._v(" "),_("blockquote",[_("p",[v._v("1、尝试修改自定义事件文件"),_("code",[v._v("customizedEventHandling.js")]),v._v("的逻辑，优化事件的监听，避免频繁触发，产生阻塞。")])]),v._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),_("p",[v._v("总体来看，优化方向不涉及到webGL的优化，主要还是以修改业务代码为主；在"),_("code",[v._v("pixijs")]),v._v("的基础上，对性能进行优化。")])])}),[],!1,null,null,null);a.default=r.exports}}]);